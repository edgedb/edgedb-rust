on: [pull_request]

name: CI

jobs:
  build_and_test:
    name: Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust_version: [default, 1.75, beta]
      fail-fast: false
    timeout-minutes: 30
    permissions:
      id-token: "write"
      contents: "read"
    steps:
      - name: checkout and env setup
        uses: actions/checkout@v3

      - name: Install EdgeDB CLI
        run: bash <(curl --proto '=https' --tlsv1.2 -sSf https://sh.edgedb.com) --nightly -y

      - name: Install EdgeDB
        run: edgedb server install --nightly

      - name: Show binaries
        run: ls -l ~/.local/bin

      - name: Install Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust_version == 'default' && 'stable' || matrix.rust_version }}
          components: rustfmt, clippy

      - name: setup rust cache
        uses: Swatinem/rust-cache@v2

      - name: Test all features
        run: cargo test --workspace --all-features

      - name: Check no default features
        run: cargo check --no-default-features --workspace

      - name: Check `fs` feature (edgedb-tokio)
        run: cargo check --features=fs --package edgedb-tokio

      - name: Check with env feature, edgedb-tokio
        run: cargo check --features=env --package edgedb-tokio

      - name: Test edgedb-protocol without default features
        run: cargo test --package=edgedb-protocol --no-default-features

      - name: Test edgedb-protocol with "all-types" feature
        run: cargo test --package=edgedb-protocol --features=all-types

      - name: Run clippy
        run: cargo clippy --workspace --all-features --all-targets

      - name: Check formatting
        run: cargo fmt --check
