commands:

  make: !Command
    description: Build the library
    container: ubuntu
    run: |
      set -ex
      cargo build --workspace --exclude=edgeql-pytest
      cargo build -p edgeql-pytest

  check: !Command
    description: Check the library
    container: ubuntu
    run: [cargo, check, --workspace, --tests]

  doc: !Command
    description: Build documentation
    container: ubuntu
    run: [cargo, doc, --workspace]

  cargo: !Command
    description: Run arbitrary cargo command
    symlink-name: cargo
    container: ubuntu
    run: [cargo]

  cargo-expand: !Command
    description: Print macro-expanded form for the crate
    container: nightly
    run: [cargo, rustc, "--", -Zunstable-options, --pretty=expanded]

  test-rust: !Command
    description: Run tests
    container: ubuntu
    run: [cargo, test, --workspace, --all-features]

  test-all-types: !Command
    description: Run tests
    container: ubuntu
    work-dir: edgedb-protocol
    run: [cargo, test, --features=all-types]

  test-rust-no-features: !Command
    description: Run tests
    container: ubuntu
    work-dir: edgedb-protocol
    run: [cargo, test, --no-default-features]

  test: !Command
    description: Run tests
    container: ubuntu
    prerequisites: [test-rust, test-all-types, test-rust-no-features]
    run: "echo OK"

  _bulk: !Command
    description: Run `bulk` command (for version bookkeeping)
    container: ubuntu
    run: [bulk]

  server: !Command
    description: Run edgedb server
    container: ubuntu
    run: [cargo, run, --bin, edgedb-server, '--',
          '--data-dir', './tmp/db', '--log-level=debug',
          '--postgres-dsn=postgres://edgedb@localhost:5432/template1?opt=val']

  py: !Command
    description: Build the python library and run python interpreter
    container: ubuntu
    run: |
      set -ex
      cargo build -p edgeql-python
      export PYTHONPATH=/work/edgeql-pytest
      python3.8 -i -c 'import edb._edgeql_rust' -v

  pytest-main: !Command
    description: Run binary from edgeql-pytest
    container: ubuntu
    run: [cargo, run, -p, edgeql-pytest]

  tree: !Command
    description: Run tree tool
    container: ubuntu
    run: [cargo, tree]

  outdated: !Command
    description: Run outdated tool
    container: tools
    run: [cargo, outdated]

  fuzz: !Command
    description: Run fuzz tool
    container: tools
    run: [cargo, fuzz]

  example-tokio: !Command
    description: Run named tokio example
    container: ubuntu
    environ:
      EDGEDB_CLIENT_TLS_SECURITY: insecure
      EDGEDB_HOST: localhost
    run: [cargo, run, --package=edgedb-tokio, --example]

  example-globals: !Command
    description: Run tokio example
    container: ubuntu
    environ:
      EDGEDB_CLIENT_TLS_SECURITY: insecure
      EDGEDB_HOST: localhost
    run: [cargo, run, --package=globals-example]

  example-query-error: !Command
    description: Run query error example
    container: ubuntu
    environ:
      EDGEDB_CLIENT_TLS_SECURITY: insecure
      EDGEDB_HOST: localhost
      LANG: en_US.utf8
    run: [cargo, run, --package=query-error-example]

  gen-errors: !Command
    description: Generate error codes
    container: ubuntu
    run: |
      set -ex
      curl https://raw.githubusercontent.com/edgedb/edgedb/master/edb/api/errors.txt -o./errors.txt
      cargo run --bin edgedb_gen_errors -- ./errors.txt

containers:

  ubuntu:
    setup:
    - !Ubuntu focal
    - !UbuntuPPA deadsnakes/ppa
    - !AptTrust keys: [BA6932366A755776]
    - !Install
      - ca-certificates
      - git
      - build-essential
      - vim
      - musl-tools
      # for cargo geiger
      - libssl-dev
      - pkg-config
      # for \psql
      - postgresql-client
      # for gen-errors
      - curl

    - !TarInstall
      url: "https://static.rust-lang.org/dist/rust-1.59.0-x86_64-unknown-linux-gnu.tar.gz"
      script: "./install.sh --prefix=/usr \
                --components=rustc,rust-std-x86_64-unknown-linux-gnu,cargo"
    - !TarInstall
      url: "https://static.rust-lang.org/dist/rust-std-1.59.0-x86_64-unknown-linux-musl.tar.gz"
      script: "./install.sh --prefix=/musl \
               --components=rust-std-x86_64-unknown-linux-musl"
    - !Env RUSTFLAGS: -g
    - !Sh 'ln -s /musl/lib/rustlib/x86_64-unknown-linux-musl /usr/lib/rustlib/x86_64-unknown-linux-musl'
    - &bulk !Tar
      url: "https://github.com/tailhook/bulk/releases/download/v0.4.10/bulk-v0.4.10.tar.gz"
      sha256: 481513f8a0306a9857d045497fb5b50b50a51e9ff748909ecf7d2bda1de275ab
      path: /
    - !Sh 'cargo install cargo-nextest --root=/usr'

    # edgedb itself for tests
    - !Sh |
        addgroup --system --gid 200 postgres
        adduser --uid 200 --system --home /data --no-create-home \
            --shell /bin/bash --group --gecos "PostgreSQL administrator" \
            postgres
    - !UbuntuRepo
      url: https://packages.edgedb.com/apt
      suite: focal
      components: [main]
      trusted: true
    - !Install [edgedb-2]

    environ: &environ
      HOME: /work/target
      CARGO_HOME: /work/target
      RUST_BACKTRACE: 1
      PYTHON_SYS_EXECUTABLE: /usr/bin/python3.8
      EDGEDB_MAJOR_VERSION: 2
      # needed for musl build
      PATH: /musl/bin:/usr/local/bin:/usr/bin:/bin
      LD_LIBRARY_PATH: /musl/lib/rustlib/x86_64-unknown-linux-musl/lib
    volumes:
      /tmp: !Tmpfs
        size: 1G

  tools:
    setup:
    - !Container ubuntu
    - !Sh 'cargo install cargo-fuzz cargo-outdated --root=/usr'
    environ: *environ

  nightly:
    setup:
    - !Ubuntu xenial
    - !Install
      - ca-certificates
      - build-essential

    - !TarInstall
      url: "https://static.rust-lang.org/dist/rust-nightly-x86_64-unknown-linux-gnu.tar.gz"
      script: "./install.sh --prefix=/usr \
                --components=rustc,rust-std-x86_64-unknown-linux-gnu,cargo"

    environ:
      HOME: /work/target
      RUST_BACKTRACE: 1
